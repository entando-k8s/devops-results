---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    entando.org/entando-resource-namespace: "my-namespace"
    entando.org/deployment: "mysql-dbms-9133"
    EntandoDatabaseService: "mysql-dbms-9133"
    entando.org/capability: "Dbms"
    my-label: "my-label-value"
    entando.org/capability-implementation: "Mysql"
    entando.org/entando-resource-kind: "EntandoDatabaseService"
    entando.org/capability-provision-scope: "Labeled"
  name: "mysql-dbms-9133-deployment"
  namespace: "my-namespace"
  ownerReferences:
  - apiVersion: "entando.org/v1"
    kind: "EntandoDatabaseService"
    blockOwnerDeletion: true
    controller: true
    name: "mysql-dbms-9133"
    uid: "2650b20b-1627-48e4-ad30-eda17f79ca63"
spec:
  replicas: 1
  selector:
    matchLabels:
      entando.org/entando-resource-namespace: "my-namespace"
      entando.org/deployment: "mysql-dbms-9133"
      EntandoDatabaseService: "mysql-dbms-9133"
      entando.org/capability: "Dbms"
      my-label: "my-label-value"
      entando.org/capability-implementation: "Mysql"
      entando.org/entando-resource-kind: "EntandoDatabaseService"
      entando.org/capability-provision-scope: "Labeled"
  template:
    metadata:
      labels:
        entando.org/entando-resource-namespace: "my-namespace"
        entando.org/deployment: "mysql-dbms-9133"
        EntandoDatabaseService: "mysql-dbms-9133"
        entando.org/capability: "Dbms"
        my-label: "my-label-value"
        entando.org/capability-implementation: "Mysql"
        entando.org/entando-resource-kind: "EntandoDatabaseService"
        entando.org/capability-provision-scope: "Labeled"
      name: "mysql-dbms-9133-pod"
    spec:
      containers:
      - env:
        - name: "CONNECTION_CONFIG_ROOT"
          value: "/etc/entando/secrets"
        - name: "MYSQL_ROOT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "password"
              name: "mysql-dbms-9133-admin-secret"
              optional: false
        image: "registry.redhat.io/rhel8/mysql-80:latest"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -h 127.0.0.1 -u root -e 'SELECT\
              \ 1'"
          failureThreshold: 1
          periodSeconds: 10
          timeoutSeconds: 3
        name: "db-container"
        ports:
        - containerPort: 3306
          name: "db-port"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -h 127.0.0.1 -u root -e 'SELECT\
              \ 1'"
          failureThreshold: 1
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "125m"
        startupProbe:
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -h 127.0.0.1 -u root -e 'SELECT\
              \ 1'"
          failureThreshold: 11
          periodSeconds: 9
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: "/var/lib/mysql/data"
          name: "mysql-dbms-9133-db-volume"
          readOnly: false
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      securityContext:
        fsGroup: 27
      serviceAccountName: "default"
      volumes:
      - name: "mysql-dbms-9133-db-volume"
        persistentVolumeClaim:
          claimName: "mysql-dbms-9133-db-pvc"
          readOnly: false
